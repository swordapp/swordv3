Request,Content,Resource,Request Requirements,Server Requirements,Response Requirements,Protocol Operation
*,*,*,MAY specify `Authorization` and `On-Behalf-Of` headers (i.e. if authenticating this request),"If `Authorization` (and optionally `On-Behalf-Of`) headers are provided, MUST authenticate the request","If authentication fails, MUST respond with a `403`",
Retrieve,*,Service-URL,,,"If `Authorization` (and optionally `On-Behalf-Of`) headers are provided, MUST only list Service-URLs in the Service Document for which a deposit request would be permitted",GET Service-URL
Retrieve,*,Service-URL,,,MUST respond with a valid Service Document or a suitable error response,
Retrieve,*,Object-URL,,,MUST respond with a valid Status document or a suitable error response,GET Object-URL
Retrieve,*,Object-URL,,,MUST include `ETag` header if implementing concurrency control,
Retrieve,*,Components,,,MUST include `ETag` header if implementing concurrency control,
Retrieve,*,Metadata-URL,,,MUST respond with a valid Metadata document (see definition below) or a suitable error response,GET Metadata-URL
Retrieve,*,File-URL,,,"MUST respond with a File (which may be Packaged Content, a Binary File, a Metadata document, or any other file that the server exposes) or a suitable error response",GET File-URL
Modify,*,*,"MUST provide the `Content-Disposition` header, with the appropriate value for the request",,,
Modify,*,Deposit,,,MUST include `ETag` header if implementing concurrency control,
Modify,Body,Deposit,,,MUST include one or more File-URLs for the deposited content in the Status document.  The behaviour of these File-URLs may vary depending on the type of content deposited (e.g. ByReference and Segmented Uploads do not need to be immediately retrievable),
Modify,Body,*,MUST provide the `Content-Type` and `Digest` headers,MUST verify that the content matches the `Digest` header,,
Modify,Body,*,SHOULD provide the `Content-Length`,MUST verify that the supplied content matches the `Content-Length` if this is provided,,
Modify,Body,Deposit,,"If all preconditions are met, MUST either accept the deposit request immediately, queue the request for processing, or respond with an error",,
Modify,Metadata,*,SHOULD provide the `Metadata-Format` header,"If no `Metadata-Format` header is provided, MUST assume this is the standard SWORD format: http://purl.org/net/sword/3.0/types/Metadata",,
Modify,Metadata,*,MUST provide only the Metadata document,,,
Modify,By-Reference,*,MUST provide the By-Reference document,"If downloading copies of the files in the By-Reference document, MUST do this asynchronously to the deposit request",,
Modify,By-Reference,File-URL,MUST only include a single By-Reference File in the By-Reference document,"If more than one By-Reference File is present, MUST reject the request.","If rejecting the request due to the presence of more than one By-Reference File in the By-Reference Document, MUST respond with a `400`",
Modify,MD+BR,*,SHOULD provide the `Metadata-Format` header,"If no `Metadata-Format` header is provided, MUST assume this is the standard SWORD format: http://purl.org/net/sword/3.0/types/Metadata",,
Modify,MD+BR,*,MUST provide the Metadata+By Reference document,"If downloading copies of the files in the By-Reference document, MUST do this asynchronously to the deposit request",,
Modify,Binary,Deposit,,If accepting the request MUST attach the supplied file to the Object as an `originalDeposit`,,
Modify,Binary File,*,"MAY provide the `Packaging` header, and if so MUST be the Binary format identifier",The server SHOULD NOT attempt to unpack the file,,
Modify,Binary File,*,MUST provide Binary File body content,,,
Modify,Packaged Content,*,MUST provide the `Packaging` header,"The server MAY attempt to unpack the file, and create `derivedResource`s from it.",,
Modify,Packaged Content,*,MUST provide Packaged Content in the request body,,,
Modify,Empty Body,*,MAY provide the `Content-Length` header with value `0`,,,
Modify,Empty Body,*,MUST NOT include any body content,,,
Create,*,Service-URL,MAY provide the `Slug` header,"If a `Slug` header is provided, MAY use this as the identifier for the newly created Object.","MUST respond with a `Location` header, containing the Object-URL",POST Service-URL
Create,*,Service-URL,,,MUST respond with a valid Status document or a suitable error response,
Create,*,Service-URL,,,Status document MUST be available on GET to the Object-URL in the `Location` header immediately (irrespective of whether this is a `201` or `202` response),
Create,*,Service-URL,,,"MUST respond with a `201` if the item was created immediately, a `202` if the item was queued for import, or raise an error.",
Create,Body,Service-URL,MAY provide the `In-Progress` header,"If no `In-Progress` header is provided, MUST assume that it is `false`",,
Create,Body,Service-URL,,"If `In-Progress` is `false`, SHOULD expect further updates to the item, and not progress it through any ingest workflows yet.",,
Create,Metadata,Service-URL,,If accepting the request MUST populate the Object with the supplied Metadata,,
Create,By-Reference,Service-URL,,If accepting the request MUST attach the By-Reference files to the Object.,,
Create,MD+BR,Service-URL,,"If accepting the request MUST populate the Object with the supplied Metadata, and attach the By-Reference files to it.",,
Create,*,Service-URL,,If accepting the request MUST create a new Object,,
Create,Empty Body,Staging-URL,,"If all preconditions are met, MUST create a resource to which the client can upload file segments","MUST respond with a `201` to indicate that the Segmented Upload has been initialised, or raise an error.",POST Staging-URL
Create,Empty Body,Staging-URL,,MUST reject the request if the conditions of the upload are not acceptable,MUST respond with a `Location` header containing the Temporary-URL where the client can upload file segments,
Update,*,Deposit,"MUST include the `If-Match` header, if the server implements concurrency control",MUST reject the request if the `If-Match` header does not match the current `ETag` of the resource,,
Update,Body,Deposit,,,"MUST respond with a `200` if the request was accepted immediately, a `202` if the request was queued for processing, or raise an error.",
Update,Body,Object-URL,MAY provide the `In-Progress` header,"If no `In-Progress` header is provided, MUST assume that it is `false`",MUST respond with a valid Status document or a suitable error response,
Update,Body,Object-URL,,,MUST include `ETag` header if implementing concurrency control,
Append,*,Object-URL,,,,POST Object-URL
Append,Binary,Object-URL,,,"MUST respond with a `Location` header, containing the File-URL of the Original Deposit File",
Append,Metadata,Object-URL,,"If accepting the new Metadata MUST add the Metadata to the item, and only treat this as an extension to existing Metadata.  The server MUST NOT overwrite or otherwise remove existing Metadata.",,
Replace,*,Object-URL,,,,PUT Object-URL
Replace,Binary,Object-URL,,"If accepting the new File, MUST remove all existing Files from the Object and replace with the new File.  The new File should be marked as an `originalDeposit`.  The server MUST also remove all Metadata, so the Metadata Resource contains no fields.",,
Replace,Metadata,Object-URL,,"If accepting the new Metadata, MUST remove all existing Files from the Object, and MUST replace the existing Metadata with the new.",,
Replace,By-Reference,Object-URL,,"If accepting the new By-Reference files, MUST remove all existing Files from the Object and replace with the By-Reference files.  The server MUST remove the existing Files immediately, even before the By-Reference files have dereferenced.  The new files MUST be marked as `originalDeposit`s.  The server MUST also remove all Metadata, so the Metadata Resource contains no fields.",,
Replace,MD+BR,Object-URL,,"If accepting the new Metadata and By-Reference files, MUST remove all existing Files from the Object and replace with the By-Reference files.  The server MUST remove the existing Files immediately, even before the By-Reference files have dereferenced.  The server MUST also replace all existing Metadata with the new Metadata.",,
Replace,Metadata,Metadata-URL,,If accepting the new Metadata MUST entirely replace the existing Metadata with the new.,,
Replace,By-Reference,FileSet-URL,,"If accepting the new By-Reference Files, MUST replace the existing FileSet with the new files.  The server MUST remove all the old files immediately, even before the new By-Reference files have been dereferenced.  The new Files MUST be marked as `originalDeposit`s",,
Replace,Binary File,FileSet-URL,,"If accepting the new File, MUST replace the existing FileSet with a single new File.  The File MUST be marked as an `originalDeposit`",,
Replace,By-Reference,File-URL,,"If accepting the new By-Reference File, MUST replace the existing File.  The server MAY keep the previous file as an older version.  The new file MUST be marked as an `originalDeposit`",,
Replace,Binary File,File-URL,,"If accepting the new File, MUST replace the existing File.  The server MAY keep the previous file as an older version.  The new File MUST be marked as an `originalDeposit`",,
Update,Body,Components,,,"MUST respond with a `204` if the replacement was deposited immediately, a `202` if the replacement was queued for import, or raise an error.",
Append,By-Reference,Object-URL,,"If accepting the request, MUST attach all the By-Reference files to the Object as `originalDeposit`s",,
Append,MD+BR,Object-URL,,"If accepting the request, MUST attach all the By-Reference files to the Object as `originalDeposit`s, and MUST add the Metadata to the item, and only treat this as an extension to existing Metadata.  The server MUST NOT overwrite or otherwise remove existing Metadata.",,
Append,Binary,Object-URL,,,,
Replace,*,Metadata-URL,,,,PUT Metadata-URL
Replace,*,FileSet-URL,,,,PUT FileSet-URL
Replace,*,File-URL,,,,PUT File-URL
Delete,*,*,,,"MUST respond with a `204` if the delete is successful, or raise an error",
Delete,*,Object-URL,,,,DELETE Object-URL
Delete,*,FileSet-URL,,,,DELETE FileSet-URL
Delete,*,File-URL,,,,DELETE File-URL
Delete,*,Metadata-URL,,,,DELETE Metadata-URL
Complete,Empty Body,Object-URL,MUST provide the header `In-Progress: false`,MAY inject the content into any ingest workflows,MUST respond with a `204` or a suitable error,POST Object-URL
Complete,Empty Body,Object-URL,MAY provide the `Content-Length` header with value `0`,,,
Complete,Empty Body,Object-URL,MUST NOT include any body content,,,
Append,Body,Temporary-URL,,"MUST reject the request if the segment is incorrect or unexpected: for example, all segments were already received, or the segment is a different size than expected.",MUST respond with a `204` or a suitable error,POST Temporary-URL
Append,File Segment,Temporary-URL,,"If all preconditions are met, MUST accept the file segment, and record the receipt of it",,
Append,File Segment,Temporary-URL,,"MUST be prepared to accept file segments in any order, and in parallel",,
Append,File Segment,Temporary-URL,,"MUST be able to store the incoming file segments as they arrive, and then reconstitute them into a single file when all segments have been received.",,
Retrieve,Empty Body,Temporary-URL,,,MUST respond with a `200` or a suitable error,GET Temporary-URL
Retrieve,Empty Body,Temporary-URL,,,"If successful, MUST respond with a Segmented File Upload Document describing the current state of the upload.",